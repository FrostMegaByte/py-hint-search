import json
from typing import Any, Dict, List
import requests
import logging

logging.getLogger("requests").setLevel(logging.WARNING)
logging.getLogger("urllib3").setLevel(logging.WARNING)


class Type4PyException(Exception):
    def __init__(self, message: str) -> None:
        super().__init__(message)
        self.message = message


class TypeT5Exception(Exception):
    def __init__(self, message: str) -> None:
        super().__init__(message)
        self.message = message


def get_ordered_type4py_predictions(python_code: str) -> List[Dict[str, Any]]:
    # r = requests.post("https://type4py.com/api/predict?tc=0", f.read())
    response = requests.post("http://localhost:5001/api/predict?tc=0", python_code)
    json_response = response.json()

    if json_response["error"] is not None:
        raise Type4PyException(json_response["error"])

    functions_predictions = {}
    for class_obj in json_response["response"]["classes"]:
        for func in class_obj["funcs"]:
            location_index = func["fn_lc"][0][0]
            functions_predictions[location_index] = func

    for func in json_response["response"]["funcs"]:
        location_index = func["fn_lc"][0][0]
        functions_predictions[location_index] = func

    functions_predictions = dict(sorted(functions_predictions.items()))
    functions_predictions = functions_predictions.values()

    filter_fields = ["q_name", "params_p", "ret_type_p"]
    type_predictions = list(
        map(
            lambda f: {key: f[key] for key in f if key in filter_fields},
            functions_predictions,
        )
    )
    return type_predictions


# Get ML predictions from Type4Py API without ordering by location
def get_typet5_predictions() -> List[Dict[str, Any]]:
    # r = requests.post("https://type4py.com/api/predict?tc=0", f.read())
    # response = requests.post("http://localhost:5000/api", f.read())
    response = """
    {"error":null,"responses":[{"file_path":"adapters.py","response":{"classes":[{"funcs":[{"name":"__init__","params_p":{},"q_name":"BaseAdapter.__init__","ret_type_p":[["None",1]]},{"name":"send","params_p":{"cert":[["None | bytes | str | tuple[bytes | str, bytes | str]",1]],"proxies":[["Mapping[str, str] | None",1]],"request":[["PreparedRequest",1]],"stream":[["bool",1]],"timeout":[["None | float | tuple[float, float] | tuple[float, None]",1]],"verify":[["bool | str",1]]},"q_name":"BaseAdapter.send","ret_type_p":[["Response",1]]},{"name":"close","params_p":{},"q_name":"BaseAdapter.close","ret_type_p":[["None",1]]}],"name":"BaseAdapter","q_name":"BaseAdapter"},{"funcs":[{"name":"__getstate__","params_p":{},"q_name":"HTTPAdapter.__getstate__","ret_type_p":[["dict",1]]},{"name":"init_poolmanager","params_p":{"block":[["bool",1]],"connections":[["int",1]],"maxsize":[["int",1]],"pool_kwargs":[["Any",1]]},"q_name":"HTTPAdapter.init_poolmanager","ret_type_p":[["None",1]]},{"name":"__init__","params_p":{"max_retries":[["Retry | int | None",1]],"pool_block":[["bool",1]],"pool_connections":[["int",1]],"pool_maxsize":[["int",1]]},"q_name":"HTTPAdapter.__init__","ret_type_p":[["None",1]]},{"name":"add_headers","params_p":{"kwargs":[["Any",1]],"request":[["PreparedRequest",1]]},"q_name":"HTTPAdapter.add_headers","ret_type_p":[["None",1]]},{"name":"close","params_p":{},"q_name":"HTTPAdapter.close","ret_type_p":[["None",1]]},{"name":"__setstate__","params_p":{"state":[["Mapping[str, Any]",1]]},"q_name":"HTTPAdapter.__setstate__","ret_type_p":[["None",1]]},{"name":"cert_verify","params_p":{"cert":[["str",1]],"conn":[["Connection",1]],"url":[["str",1]],"verify":[["bool",1]]},"q_name":"HTTPAdapter.cert_verify","ret_type_p":[["None",1]]},{"name":"proxy_headers","params_p":{"proxy":[["str",1]]},"q_name":"HTTPAdapter.proxy_headers","ret_type_p":[["dict[str, str]",1]]},{"name":"proxy_manager_for","params_p":{"proxy":[["str",1]],"proxy_kwargs":[["Any",1]]},"q_name":"HTTPAdapter.proxy_manager_for","ret_type_p":[["SOCKSProxyManager",1]]},{"name":"request_url","params_p":{"proxies":[["Mapping[Any, Any]",1]],"request":[["PreparedRequest",1]]},"q_name":"HTTPAdapter.request_url","ret_type_p":[["str",1]]},{"name":"get_connection","params_p":{"proxies":[["Mapping[Any, Any] | None",1]],"url":[["str",1]]},"q_name":"HTTPAdapter.get_connection","ret_type_p":[["Connection",1]]},{"name":"build_response","params_p":{"req":[["PreparedRequest",1]],"resp":[["Any",1]]},"q_name":"HTTPAdapter.build_response","ret_type_p":[["Response",1]]},{"name":"send","params_p":{"cert":[["None | bytes | str | tuple[bytes | str, bytes | str]",1]],"proxies":[["Mapping[str, str] | None",1]],"request":[["PreparedRequest",1]],"stream":[["bool",1]],"timeout":[["None | float | tuple[float, float] | tuple[float, None]",1]],"verify":[["bool | str",1]]},"q_name":"HTTPAdapter.send","ret_type_p":[["Response",1]]}],"name":"HTTPAdapter","q_name":"HTTPAdapter"}],"funcs":[{"name":"SOCKSProxyManager","params_p":{"args":[["Any",1]],"kwargs":[["Any",1]]},"q_name":"SOCKSProxyManager","ret_type_p":[["SOCKSProxyManager",1]]}]}},{"file_path":"auth.py","response":{"classes":[{"funcs":[{"name":"__call__","params_p":{"r":[["models.PreparedRequest",1]]},"q_name":"AuthBase.__call__","ret_type_p":[["models.PreparedRequest",1]]}],"name":"AuthBase","q_name":"AuthBase"},{"funcs":[{"name":"__init__","params_p":{"password":[["bytes | str",1]],"username":[["bytes | str",1]]},"q_name":"HTTPBasicAuth.__init__","ret_type_p":[["None",1]]},{"name":"__eq__","params_p":{"other":[["Any",1]]},"q_name":"HTTPBasicAuth.__eq__","ret_type_p":[["bool",1]]},{"name":"__ne__","params_p":{"other":[["Any",1]]},"q_name":"HTTPBasicAuth.__ne__","ret_type_p":[["bool",1]]},{"name":"__call__","params_p":{"r":[["Any",1]]},"q_name":"HTTPBasicAuth.__call__","ret_type_p":[["Any",1]]}],"name":"HTTPBasicAuth","q_name":"HTTPBasicAuth"},{"funcs":[{"name":"__init__","params_p":{"password":[["bytes | str",1]],"username":[["bytes | str",1]]},"q_name":"HTTPDigestAuth.__init__","ret_type_p":[["None",1]]},{"name":"init_per_thread_state","params_p":{},"q_name":"HTTPDigestAuth.init_per_thread_state","ret_type_p":[["None",1]]},{"name":"__eq__","params_p":{"other":[["Any",1]]},"q_name":"HTTPDigestAuth.__eq__","ret_type_p":[["bool",1]]},{"name":"__ne__","params_p":{"other":[["Any",1]]},"q_name":"HTTPDigestAuth.__ne__","ret_type_p":[["bool",1]]},{"name":"handle_redirect","params_p":{"kwargs":[["Any",1]],"r":[["models.Response",1]]},"q_name":"HTTPDigestAuth.handle_redirect","ret_type_p":[["models.Response",1]]},{"name":"build_digest_header","params_p":{"method":[["str",1]],"url":[["str",1]]},"q_name":"HTTPDigestAuth.build_digest_header","ret_type_p":[["str | None",1]]},{"name":"handle_401","params_p":{"kwargs":[["Any",1]],"r":[["models.Response",1]]},"q_name":"HTTPDigestAuth.handle_401","ret_type_p":[["models.Response",1]]},{"name":"__call__","params_p":{"r":[["models.Response",1]]},"q_name":"HTTPDigestAuth.__call__","ret_type_p":[["models.Response",1]]}],"name":"HTTPDigestAuth","q_name":"HTTPDigestAuth"},{"funcs":[{"name":"__call__","params_p":{"r":[["Any",1]]},"q_name":"HTTPProxyAuth.__call__","ret_type_p":[["Any",1]]}],"name":"HTTPProxyAuth","q_name":"HTTPProxyAuth"}],"funcs":[{"name":"_basic_auth_str","params_p":{"password":[["bytes | str",1]],"username":[["bytes | str",1]]},"q_name":"_basic_auth_str","ret_type_p":[["str",1]]}]}},{"file_path":"cookies.py","response":{"classes":[{"funcs":[{"name":"get_type","params_p":{},"q_name":"MockRequest.get_type","ret_type_p":[["str",1]]},{"name":"is_unverifiable","params_p":{},"q_name":"MockRequest.is_unverifiable","ret_type_p":[["bool",1]]},{"name":"add_header","params_p":{"key":[["str",1]],"val":[["str",1]]},"q_name":"MockRequest.add_header","ret_type_p":[["None",1]]},{"name":"add_unredirected_header","params_p":{"name":[["str",1]],"value":[["str",1]]},"q_name":"MockRequest.add_unredirected_header","ret_type_p":[["None",1]]},{"name":"get_new_headers","params_p":{},"q_name":"MockRequest.get_new_headers","ret_type_p":[["MutableMapping[str, str]",1]]},{"name":"unverifiable","params_p":{},"q_name":"MockRequest.unverifiable","ret_type_p":[["bool",1]]},{"name":"get_host","params_p":{},"q_name":"MockRequest.get_host","ret_type_p":[["str",1]]},{"name":"host","params_p":{},"q_name":"MockRequest.host","ret_type_p":[["str",1]]},{"name":"get_origin_req_host","params_p":{},"q_name":"MockRequest.get_origin_req_host","ret_type_p":[["str",1]]},{"name":"origin_req_host","params_p":{},"q_name":"MockRequest.origin_req_host","ret_type_p":[["str",1]]},{"name":"__init__","params_p":{"request":[["Any",1]]},"q_name":"MockRequest.__init__","ret_type_p":[["None",1]]},{"name":"has_header","params_p":{"name":[["str",1]]},"q_name":"MockRequest.has_header","ret_type_p":[["bool",1]]},{"name":"get_header","params_p":{"default":[["Any",1]],"name":[["str",1]]},"q_name":"MockRequest.get_header","ret_type_p":[["Any",1]]},{"name":"get_full_url","params_p":{},"q_name":"MockRequest.get_full_url","ret_type_p":[["str",1]]}],"name":"MockRequest","q_name":"MockRequest"},{"funcs":[{"name":"__init__","params_p":{"headers":[["Morsel",1]]},"q_name":"MockResponse.__init__","ret_type_p":[["None",1]]},{"name":"info","params_p":{},"q_name":"MockResponse.info","ret_type_p":[["MutableMapping[str, Any]",1]]},{"name":"getheaders","params_p":{"name":[["str",1]]},"q_name":"MockResponse.getheaders","ret_type_p":[["None",1]]}],"name":"MockResponse","q_name":"MockResponse"},{"funcs":[{"name":"itervalues","params_p":{},"q_name":"RequestsCookieJar.itervalues","ret_type_p":[["MutableMapping[str, Any]",1]]},{"name":"values","params_p":{},"q_name":"RequestsCookieJar.values","ret_type_p":[["MutableMapping[str, Any]",1]]},{"name":"list_domains","params_p":{},"q_name":"RequestsCookieJar.list_domains","ret_type_p":[["List[str]",1]]},{"name":"list_paths","params_p":{},"q_name":"RequestsCookieJar.list_paths","ret_type_p":[["list[str]",1]]},{"name":"multiple_domains","params_p":{},"q_name":"RequestsCookieJar.multiple_domains","ret_type_p":[["bool",1]]},{"name":"__contains__","params_p":{"name":[["str",1]]},"q_name":"RequestsCookieJar.__contains__","ret_type_p":[["bool",1]]},{"name":"set_cookie","params_p":{"args":[["Any",1]],"cookie":[["CookieJar",1]],"kwargs":[["Any",1]]},"q_name":"RequestsCookieJar.set_cookie","ret_type_p":[["CookieJar",1]]},{"name":"update","params_p":{"other":[["Any",1]]},"q_name":"RequestsCookieJar.update","ret_type_p":[["None",1]]},{"name":"__setstate__","params_p":{"state":[["Any",1]]},"q_name":"RequestsCookieJar.__setstate__","ret_type_p":[["None",1]]},{"name":"get_policy","params_p":{},"q_name":"RequestsCookieJar.get_policy","ret_type_p":[["str",1]]},{"name":"copy","params_p":{},"q_name":"RequestsCookieJar.copy","ret_type_p":[["RequestsCookieJar",1]]},{"name":"__getstate__","params_p":{},"q_name":"RequestsCookieJar.__getstate__","ret_type_p":[["MutableMapping[str, Any]",1]]},{"name":"_find_no_duplicates","params_p":{"domain":[["str",1]],"name":[["str",1]],"path":[["str",1]]},"q_name":"RequestsCookieJar._find_no_duplicates","ret_type_p":[["Any",1]]},{"name":"__getitem__","params_p":{"name":[["str",1]]},"q_name":"RequestsCookieJar.__getitem__","ret_type_p":[["Any",1]]},{"name":"get","params_p":{"default":[["Any",1]],"domain":[["str",1]],"name":[["str",1]],"path":[["str",1]]},"q_name":"RequestsCookieJar.get","ret_type_p":[["Any",1]]},{"name":"_find","params_p":{"domain":[["str",1]],"name":[["str",1]],"path":[["str",1]]},"q_name":"RequestsCookieJar._find","ret_type_p":[["str",1]]},{"name":"get_dict","params_p":{"domain":[["str",1]],"path":[["str",1]]},"q_name":"RequestsCookieJar.get_dict","ret_type_p":[["MutableMapping[str, Any]",1]]},{"name":"iteritems","params_p":{},"q_name":"RequestsCookieJar.iteritems","ret_type_p":[["MutableMapping[str, str]",1]]},{"name":"items","params_p":{},"q_name":"RequestsCookieJar.items","ret_type_p":[["MutableMapping[str, str]",1]]},{"name":"iterkeys","params_p":{},"q_name":"RequestsCookieJar.iterkeys","ret_type_p":[["Iterable[str]",1]]},{"name":"keys","params_p":{},"q_name":"RequestsCookieJar.keys","ret_type_p":[["List[str]",1]]},{"name":"__delitem__","params_p":{"name":[["str",1]]},"q_name":"RequestsCookieJar.__delitem__","ret_type_p":[["None",1]]},{"name":"set","params_p":{"kwargs":[["Any",1]],"name":[["str",1]],"value":[["Any",1]]},"q_name":"RequestsCookieJar.set","ret_type_p":[["CookieJar",1]]},{"name":"__setitem__","params_p":{"name":[["str",1]],"value":[["Any",1]]},"q_name":"RequestsCookieJar.__setitem__","ret_type_p":[["None",1]]}],"name":"RequestsCookieJar","q_name":"RequestsCookieJar"}],"funcs":[{"name":"create_cookie","params_p":{"kwargs":[["Any",1]],"name":[["str",1]],"value":[["Any",1]]},"q_name":"create_cookie","ret_type_p":[["CookieJar",1]]},{"name":"morsel_to_cookie","params_p":{"morsel":[["Morsel",1]]},"q_name":"morsel_to_cookie","ret_type_p":[["CookieJar",1]]},{"name":"extract_cookies_to_jar","params_p":{"jar":[["Any",1]],"request":[["Any",1]],"response":[["Any",1]]},"q_name":"extract_cookies_to_jar","ret_type_p":[["None",1]]},{"name":"_copy_cookie_jar","params_p":{"jar":[["CookieJar",1]]},"q_name":"_copy_cookie_jar","ret_type_p":[["CookieJar",1]]},{"name":"cookiejar_from_dict","params_p":{"cookie_dict":[["dict",1]],"cookiejar":[["CookieJar",1]],"overwrite":[["bool",1]]},"q_name":"cookiejar_from_dict","ret_type_p":[["CookieJar",1]]},{"name":"merge_cookies","params_p":{"cookiejar":[["Any",1]],"cookies":[["Any",1]]},"q_name":"merge_cookies","ret_type_p":[["Any",1]]},{"name":"remove_cookie_by_name","params_p":{"cookiejar":[["CookieJar",1]],"domain":[["str",1]],"name":[["str",1]],"path":[["str",1]]},"q_name":"remove_cookie_by_name","ret_type_p":[["None",1]]},{"name":"get_cookie_header","params_p":{"jar":[["CookieJar",1]],"request":[["Any",1]]},"q_name":"get_cookie_header","ret_type_p":[["str | None",1]]}]}},{"file_path":"help.py","response":{"classes":[],"funcs":[{"name":"_implementation","params_p":{},"q_name":"_implementation","ret_type_p":[["TypedDict",1]]},{"name":"info","params_p":{},"q_name":"info","ret_type_p":[["_InfoDict",1]]},{"name":"main","params_p":{},"q_name":"main","ret_type_p":[["None",1]]}]}},{"file_path":"hooks.py","response":{"classes":[],"funcs":[{"name":"default_hooks","params_p":{},"q_name":"default_hooks","ret_type_p":[["dict",1]]},{"name":"dispatch_hook","params_p":{"hook_data":[["Any",1]],"hooks":[["dict[str, Any]",1]],"key":[["str",1]],"kwargs":[["Any",1]]},"q_name":"dispatch_hook","ret_type_p":[["Any",1]]}]}},{"file_path":"models.py","response":{"classes":[{"funcs":[{"name":"__repr__","params_p":{},"q_name":"Request.__repr__","ret_type_p":[["str",1]]},{"name":"__init__","params_p":{"auth":[["_Auth | None",1]],"cookies":[["_RequestsCookieJar | None",1]],"data":[["_Data | None",1]],"files":[["_Files | None",1]],"headers":[["_HeadersUpdateMapping | None",1]],"hooks":[["_HooksInput | None",1]],"json":[["Incomplete | None",1]],"method":[["str | bytes | None",1]],"params":[["_Params | None",1]],"url":[["str | bytes | None",1]]},"q_name":"Request.__init__","ret_type_p":[["None",1]]},{"name":"prepare","params_p":{},"q_name":"Request.prepare","ret_type_p":[["PreparedRequest",1]]}],"name":"Request","q_name":"Request"},{"funcs":[{"name":"__init__","params_p":{},"q_name":"PreparedRequest.__init__","ret_type_p":[["None",1]]},{"name":"__repr__","params_p":{},"q_name":"PreparedRequest.__repr__","ret_type_p":[["str",1]]},{"name":"_get_idna_encoded_host","params_p":{"host":[["str",1]]},"q_name":"PreparedRequest._get_idna_encoded_host","ret_type_p":[["str",1]]},{"name":"prepare_hooks","params_p":{"hooks":[["Any",1]]},"q_name":"PreparedRequest.prepare_hooks","ret_type_p":[["None",1]]},{"name":"copy","params_p":{},"q_name":"PreparedRequest.copy","ret_type_p":[["PreparedRequest",1]]},{"name":"prepare_method","params_p":{"method":[["str | None",1]]},"q_name":"PreparedRequest.prepare_method","ret_type_p":[["None",1]]},{"name":"prepare_url","params_p":{"params":[["Any",1]],"url":[["str",1]]},"q_name":"PreparedRequest.prepare_url","ret_type_p":[["None",1]]},{"name":"prepare","params_p":{"auth":[["Any | tuple[str, ...]",1]],"cookies":[["Any",1]],"data":[["Any",1]],"files":[["Any",1]],"headers":[["Any",1]],"hooks":[["Any",1]],"json":[["Any",1]],"method":[["str | None",1]],"params":[["Any",1]],"url":[["str | None",1]]},"q_name":"PreparedRequest.prepare","ret_type_p":[["None",1]]},{"name":"prepare_headers","params_p":{"headers":[["Any",1]]},"q_name":"PreparedRequest.prepare_headers","ret_type_p":[["None",1]]},{"name":"prepare_content_length","params_p":{"body":[["Any",1]]},"q_name":"PreparedRequest.prepare_content_length","ret_type_p":[["None",1]]},{"name":"prepare_auth","params_p":{"auth":[["Any | tuple[str, ...]",1]],"url":[["str",1]]},"q_name":"PreparedRequest.prepare_auth","ret_type_p":[["None",1]]},{"name":"prepare_body","params_p":{"data":[["Any",1]],"files":[["Any",1]],"json":[["Any",1]]},"q_name":"PreparedRequest.prepare_body","ret_type_p":[["None",1]]},{"name":"prepare_cookies","params_p":{"cookies":[["Any",1]]},"q_name":"PreparedRequest.prepare_cookies","ret_type_p":[["None",1]]}],"name":"PreparedRequest","q_name":"PreparedRequest"},{"funcs":[{"name":"path_url","params_p":{},"q_name":"RequestEncodingMixin.path_url","ret_type_p":[["str",1]]},{"name":"_encode_files","params_p":{"data":[["Any",1]],"files":[["Any",1]]},"q_name":"RequestEncodingMixin._encode_files","ret_type_p":[["Any",1]]},{"name":"_encode_params","params_p":{"data":[["Any",1]]},"q_name":"RequestEncodingMixin._encode_params","ret_type_p":[["Any",1]]}],"name":"RequestEncodingMixin","q_name":"RequestEncodingMixin"},{"funcs":[{"name":"__enter__","params_p":{},"q_name":"Response.__enter__","ret_type_p":[["Self",1]]},{"name":"__repr__","params_p":{},"q_name":"Response.__repr__","ret_type_p":[["str",1]]},{"name":"is_redirect","params_p":{},"q_name":"Response.is_redirect","ret_type_p":[["bool",1]]},{"name":"is_permanent_redirect","params_p":{},"q_name":"Response.is_permanent_redirect","ret_type_p":[["bool",1]]},{"name":"next","params_p":{},"q_name":"Response.next","ret_type_p":[["PreparedRequest | None",1]]},{"name":"close","params_p":{},"q_name":"Response.close","ret_type_p":[["None",1]]},{"name":"__exit__","params_p":{"args":[["Any",1]]},"q_name":"Response.__exit__","ret_type_p":[["None",1]]},{"name":"__init__","params_p":{},"q_name":"Response.__init__","ret_type_p":[["None",1]]},{"name":"__setstate__","params_p":{"state":[["dict",1]]},"q_name":"Response.__setstate__","ret_type_p":[["None",1]]},{"name":"raise_for_status","params_p":{},"q_name":"Response.raise_for_status","ret_type_p":[["None",1]]},{"name":"ok","params_p":{},"q_name":"Response.ok","ret_type_p":[["bool",1]]},{"name":"__nonzero__","params_p":{},"q_name":"Response.__nonzero__","ret_type_p":[["bool",1]]},{"name":"__bool__","params_p":{},"q_name":"Response.__bool__","ret_type_p":[["bool",1]]},{"name":"iter_content","params_p":{"chunk_size":[["int | None",1]],"decode_unicode":[["bool",1]]},"q_name":"Response.iter_content","ret_type_p":[["Iterator[Any]",1]]},{"name":"content","params_p":{},"q_name":"Response.content","ret_type_p":[["bytes",1]]},{"name":"apparent_encoding","params_p":{},"q_name":"Response.apparent_encoding","ret_type_p":[["str",1]]},{"name":"text","params_p":{},"q_name":"Response.text","ret_type_p":[["str",1]]},{"name":"__getstate__","params_p":{},"q_name":"Response.__getstate__","ret_type_p":[["dict",1]]},{"name":"iter_lines","params_p":{"chunk_size":[["int | None",1]],"decode_unicode":[["bool",1]],"delimiter":[["str | bytes | None",1]]},"q_name":"Response.iter_lines","ret_type_p":[["Iterator[Any]",1]]},{"name":"__iter__","params_p":{},"q_name":"Response.__iter__","ret_type_p":[["Iterator[bytes]",1]]},{"name":"json","params_p":{"kwargs":[["Any",1]]},"q_name":"Response.json","ret_type_p":[["Any",1]]},{"name":"links","params_p":{},"q_name":"Response.links","ret_type_p":[["dict[Any, Any]",1]]}],"name":"Response","q_name":"Response"},{"funcs":[{"name":"deregister_hook","params_p":{"event":[["str",1]],"hook":[["Callable[[], Any]",1]]},"q_name":"RequestHooksMixin.deregister_hook","ret_type_p":[["bool",1]]},{"name":"register_hook","params_p":{"event":[["str",1]],"hook":[["Callable",1]]},"q_name":"RequestHooksMixin.register_hook","ret_type_p":[["None",1]]}],"name":"RequestHooksMixin","q_name":"RequestHooksMixin"}],"funcs":[]}},{"file_path":"sessions.py","response":{"classes":[{"funcs":[{"name":"should_strip_auth","params_p":{"new_url":[["str",1]],"old_url":[["str",1]]},"q_name":"SessionRedirectMixin.should_strip_auth","ret_type_p":[["bool",1]]},{"name":"rebuild_method","params_p":{"prepared_request":[["PreparedRequest",1]],"response":[["Response",1]]},"q_name":"SessionRedirectMixin.rebuild_method","ret_type_p":[["None",1]]},{"name":"get_redirect_target","params_p":{"resp":[["Response",1]]},"q_name":"SessionRedirectMixin.get_redirect_target","ret_type_p":[["str | None",1]]},{"name":"rebuild_proxies","params_p":{"prepared_request":[["PreparedRequest",1]],"proxies":[["Mapping[str, str] | None",1]]},"q_name":"SessionRedirectMixin.rebuild_proxies","ret_type_p":[["dict[str, Any]",1]]},{"name":"rebuild_auth","params_p":{"prepared_request":[["PreparedRequest",1]],"response":[["Response",1]]},"q_name":"SessionRedirectMixin.rebuild_auth","ret_type_p":[["None",1]]},{"name":"resolve_redirects","params_p":{"adapter_kwargs":[["Any",1]],"cert":[["Incomplete | None",1]],"proxies":[["Incomplete | None",1]],"req":[["PreparedRequest",1]],"resp":[["Response",1]],"stream":[["bool",1]],"timeout":[["Incomplete | None",1]],"verify":[["bool",1]],"yield_requests":[["bool",1]]},"q_name":"SessionRedirectMixin.resolve_redirects","ret_type_p":[["Iterable[Response]",1]]}],"name":"SessionRedirectMixin","q_name":"SessionRedirectMixin"},{"funcs":[{"name":"__enter__","params_p":{},"q_name":"Session.__enter__","ret_type_p":[["Self",1]]},{"name":"close","params_p":{},"q_name":"Session.close","ret_type_p":[["None",1]]},{"name":"__exit__","params_p":{"args":[["Any",1]]},"q_name":"Session.__exit__","ret_type_p":[["None",1]]},{"name":"mount","params_p":{"adapter":[["_BaseAdapter",1]],"prefix":[["str | bytes",1]]},"q_name":"Session.mount","ret_type_p":[["None",1]]},{"name":"__getstate__","params_p":{},"q_name":"Session.__getstate__","ret_type_p":[["dict",1]]},{"name":"__setstate__","params_p":{"state":[["MutableMapping[str, Any]",1]]},"q_name":"Session.__setstate__","ret_type_p":[["None",1]]},{"name":"prepare_request","params_p":{"request":[["Request",1]]},"q_name":"Session.prepare_request","ret_type_p":[["PreparedRequest",1]]},{"name":"request","params_p":{"allow_redirects":[["bool",1]],"auth":[["_Auth | None",1]],"cert":[["_Cert | None",1]],"cookies":[["None | RequestsCookieJar | _TextMapping",1]],"data":[["_Data | None",1]],"files":[["_Files | None",1]],"headers":[["_HeadersUpdateMapping | None",1]],"hooks":[["_HooksInput | None",1]],"json":[["Incomplete | None",1]],"method":[["str | bytes",1]],"params":[["_Params | None",1]],"proxies":[["_TextMapping | None",1]],"stream":[["bool | None",1]],"timeout":[["_Timeout | None",1]],"url":[["str | bytes",1]],"verify":[["_Verify | None",1]]},"q_name":"Session.request","ret_type_p":[["Response",1]]},{"name":"get_adapter","params_p":{"url":[["str",1]]},"q_name":"Session.get_adapter","ret_type_p":[["_BaseAdapter",1]]},{"name":"delete","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.delete","ret_type_p":[["Response",1]]},{"name":"patch","params_p":{"data":[["_Data | None",1]],"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.patch","ret_type_p":[["Response",1]]},{"name":"put","params_p":{"data":[["_Data | None",1]],"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.put","ret_type_p":[["Response",1]]},{"name":"post","params_p":{"data":[["_Data | None",1]],"json":[["Incomplete | None",1]],"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.post","ret_type_p":[["Response",1]]},{"name":"head","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.head","ret_type_p":[["Response",1]]},{"name":"options","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.options","ret_type_p":[["Response",1]]},{"name":"get","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"Session.get","ret_type_p":[["Response",1]]},{"name":"merge_environment_settings","params_p":{"cert":[["_Cert | None",1]],"proxies":[["_TextMapping | None",1]],"stream":[["bool | None",1]],"url":[["str | bytes | None",1]],"verify":[["_Verify | None",1]]},"q_name":"Session.merge_environment_settings","ret_type_p":[["_Settings",1]]},{"name":"send","params_p":{"kwargs":[["Any",1]],"request":[["PreparedRequest",1]]},"q_name":"Session.send","ret_type_p":[["Response",1]]},{"name":"__init__","params_p":{},"q_name":"Session.__init__","ret_type_p":[["None",1]]}],"name":"Session","q_name":"Session"}],"funcs":[{"name":"merge_setting","params_p":{"dict_class":[["TypeAlias",1]],"request_setting":[["Any",1]],"session_setting":[["Any",1]]},"q_name":"merge_setting","ret_type_p":[["Any",1]]},{"name":"merge_hooks","params_p":{"dict_class":[["TypeAlias",1]],"request_hooks":[["Any",1]],"session_hooks":[["Any",1]]},"q_name":"merge_hooks","ret_type_p":[["Any",1]]},{"name":"session","params_p":{},"q_name":"session","ret_type_p":[["Session",1]]}]}},{"file_path":"structures.py","response":{"classes":[{"funcs":[{"name":"__init__","params_p":{"data":[["Mapping[str, _VT] | Iterable[tuple[str, _VT]] | None",1]],"kwargs":[["Any",1]]},"q_name":"CaseInsensitiveDict.__init__","ret_type_p":[["None",1]]},{"name":"__setitem__","params_p":{"key":[["str",1]],"value":[["_VT",1]]},"q_name":"CaseInsensitiveDict.__setitem__","ret_type_p":[["None",1]]},{"name":"__getitem__","params_p":{"key":[["str",1]]},"q_name":"CaseInsensitiveDict.__getitem__","ret_type_p":[["_VT",1]]},{"name":"__delitem__","params_p":{"key":[["str",1]]},"q_name":"CaseInsensitiveDict.__delitem__","ret_type_p":[["None",1]]},{"name":"__iter__","params_p":{},"q_name":"CaseInsensitiveDict.__iter__","ret_type_p":[["Iterator[str]",1]]},{"name":"__len__","params_p":{},"q_name":"CaseInsensitiveDict.__len__","ret_type_p":[["int",1]]},{"name":"copy","params_p":{},"q_name":"CaseInsensitiveDict.copy","ret_type_p":[["CaseInsensitiveDict[_VT]",1]]},{"name":"__repr__","params_p":{},"q_name":"CaseInsensitiveDict.__repr__","ret_type_p":[["str",1]]},{"name":"lower_items","params_p":{},"q_name":"CaseInsensitiveDict.lower_items","ret_type_p":[["Iterator[tuple[str, _VT]]",1]]},{"name":"__eq__","params_p":{"other":[["Any",1]]},"q_name":"CaseInsensitiveDict.__eq__","ret_type_p":[["bool",1]]}],"name":"CaseInsensitiveDict","q_name":"CaseInsensitiveDict"},{"funcs":[{"name":"__init__","params_p":{"name":[["Any",1]]},"q_name":"LookupDict.__init__","ret_type_p":[["None",1]]},{"name":"__repr__","params_p":{},"q_name":"LookupDict.__repr__","ret_type_p":[["str",1]]},{"name":"get","params_p":{"default":[["_D | _VT",1]],"key":[["str",1]]},"q_name":"LookupDict.get","ret_type_p":[["_D | _VT",1]]},{"name":"__getitem__","params_p":{"key":[["str",1]]},"q_name":"LookupDict.__getitem__","ret_type_p":[["_VT | None",1]]}],"name":"LookupDict","q_name":"LookupDict"}],"funcs":[]}},{"file_path":"status_codes.py","response":{"classes":[],"funcs":[{"name":"_init","params_p":{},"q_name":"_init","ret_type_p":[["None",1]]}]}},{"file_path":"utils.py","response":{"classes":[],"funcs":[{"name":"proxy_bypass_registry","params_p":{"host":[["str",1]]},"q_name":"proxy_bypass_registry","ret_type_p":[["bool",1]]},{"name":"proxy_bypass","params_p":{"host":[["str",1]]},"q_name":"proxy_bypass","ret_type_p":[["bool",1]]},{"name":"dict_to_sequence","params_p":{"d":[["Mapping[str, str]",1]]},"q_name":"dict_to_sequence","ret_type_p":[["Iterable[str]",1]]},{"name":"super_len","params_p":{"o":[["Any",1]]},"q_name":"super_len","ret_type_p":[["int",1]]},{"name":"get_netrc_auth","params_p":{"raise_errors":[["bool",1]],"url":[["_Uri",1]]},"q_name":"get_netrc_auth","ret_type_p":[["tuple[str, str] | None",1]]},{"name":"guess_filename","params_p":{"obj":[["Any",1]]},"q_name":"guess_filename","ret_type_p":[["str",1]]},{"name":"atomic_open","params_p":{"filename":[["StrOrBytesPath",1]]},"q_name":"atomic_open","ret_type_p":[["_GeneratorContextManager[BufferedWriter]",1]]},{"name":"extract_zipped_paths","params_p":{"path":[["StrOrBytesPath",1]]},"q_name":"extract_zipped_paths","ret_type_p":[["StrOrBytesPath",1]]},{"name":"from_key_val_list","params_p":{"value":[["Iterable[Any]",1]]},"q_name":"from_key_val_list","ret_type_p":[["Union[None, str, bytes, bool, int]",1]]},{"name":"to_key_val_list","params_p":{"value":[["Any",1]]},"q_name":"to_key_val_list","ret_type_p":[["Any",1]]},{"name":"unquote_header_value","params_p":{"is_filename":[["bool",1]],"value":[["str",1]]},"q_name":"unquote_header_value","ret_type_p":[["str",1]]},{"name":"parse_dict_header","params_p":{"value":[["str",1]]},"q_name":"parse_dict_header","ret_type_p":[["dict",1]]},{"name":"parse_list_header","params_p":{"value":[["str",1]]},"q_name":"parse_list_header","ret_type_p":[["Iterable[str]",1]]},{"name":"dict_from_cookiejar","params_p":{"cj":[["Iterable[cookies.Cookie]",1]]},"q_name":"dict_from_cookiejar","ret_type_p":[["dict",1]]},{"name":"add_dict_to_cookiejar","params_p":{"cj":[["dict",1]],"cookie_dict":[["dict",1]]},"q_name":"add_dict_to_cookiejar","ret_type_p":[["CookieJar",1]]},{"name":"get_encodings_from_content","params_p":{"content":[["str",1]]},"q_name":"get_encodings_from_content","ret_type_p":[["Iterable[str]",1]]},{"name":"_parse_content_type_header","params_p":{"header":[["str",1]]},"q_name":"_parse_content_type_header","ret_type_p":[["Tuple[str, Mapping[str, str]]",1]]},{"name":"stream_decode_response_unicode","params_p":{"iterator":[["Generator[str, None, None]",1]],"r":[["Request",1]]},"q_name":"stream_decode_response_unicode","ret_type_p":[["Generator[str, None, None]",1]]},{"name":"iter_slices","params_p":{"slice_length":[["int | None",1]],"string":[["str",1]]},"q_name":"iter_slices","ret_type_p":[["Generator[str, None, None]",1]]},{"name":"dotted_netmask","params_p":{"mask":[["int",1]]},"q_name":"dotted_netmask","ret_type_p":[["str",1]]},{"name":"address_in_network","params_p":{"ip":[["str",1]],"net":[["str",1]]},"q_name":"address_in_network","ret_type_p":[["bool",1]]},{"name":"is_ipv4_address","params_p":{"string_ip":[["str",1]]},"q_name":"is_ipv4_address","ret_type_p":[["bool",1]]},{"name":"is_valid_cidr","params_p":{"string_network":[["str",1]]},"q_name":"is_valid_cidr","ret_type_p":[["bool",1]]},{"name":"set_environ","params_p":{"env_name":[["str",1]],"value":[["None",1]]},"q_name":"set_environ","ret_type_p":[["_GeneratorContextManager[None]",1]]},{"name":"should_bypass_proxies","params_p":{"no_proxy":[["Iterable[str] | None",1]],"url":[["_Uri",1]]},"q_name":"should_bypass_proxies","ret_type_p":[["bool",1]]},{"name":"get_environ_proxies","params_p":{"no_proxy":[["Iterable[str] | None",1]],"url":[["_Uri",1]]},"q_name":"get_environ_proxies","ret_type_p":[["dict[Any, Any]",1]]},{"name":"parse_header_links","params_p":{"value":[["str",1]]},"q_name":"parse_header_links","ret_type_p":[["list[dict[str, str]]",1]]},{"name":"guess_json_utf","params_p":{"data":[["bytes",1]]},"q_name":"guess_json_utf","ret_type_p":[["Optional[str]",1]]},{"name":"prepend_scheme_if_needed","params_p":{"new_scheme":[["str",1]],"url":[["str",1]]},"q_name":"prepend_scheme_if_needed","ret_type_p":[["str",1]]},{"name":"get_auth_from_url","params_p":{"url":[["_Uri",1]]},"q_name":"get_auth_from_url","ret_type_p":[["tuple[str, str]",1]]},{"name":"urldefragauth","params_p":{"url":[["_Uri",1]]},"q_name":"urldefragauth","ret_type_p":[["str",1]]},{"name":"rewind_body","params_p":{"prepared_request":[["PreparedRequest",1]]},"q_name":"rewind_body","ret_type_p":[["None",1]]},{"name":"_validate_header_part","params_p":{"header":[["AnyStr",1]],"header_part":[["AnyStr",1]],"header_validator_index":[["int",1]]},"q_name":"_validate_header_part","ret_type_p":[["None",1]]},{"name":"check_header_validity","params_p":{"header":[["tuple[AnyStr, AnyStr]",1]]},"q_name":"check_header_validity","ret_type_p":[["None",1]]},{"name":"unquote_unreserved","params_p":{"uri":[["str",1]]},"q_name":"unquote_unreserved","ret_type_p":[["str",1]]},{"name":"requote_uri","params_p":{"uri":[["str",1]]},"q_name":"requote_uri","ret_type_p":[["str",1]]},{"name":"resolve_proxies","params_p":{"proxies":[["Mapping[str, str] | None",1]],"request":[["Request | PreparedRequest",1]],"trust_env":[["bool",1]]},"q_name":"resolve_proxies","ret_type_p":[["dict[str, Any]",1]]},{"name":"select_proxy","params_p":{"proxies":[["Mapping[Any, Any] | None",1]],"url":[["_Uri",1]]},"q_name":"select_proxy","ret_type_p":[["Any | None",1]]},{"name":"get_encoding_from_headers","params_p":{"headers":[["Mapping[str, str]",1]]},"q_name":"get_encoding_from_headers","ret_type_p":[["str | None",1]]},{"name":"get_unicode_from_response","params_p":{"r":[["Request",1]]},"q_name":"get_unicode_from_response","ret_type_p":[["str",1]]},{"name":"default_user_agent","params_p":{"name":[["str",1]]},"q_name":"default_user_agent","ret_type_p":[["str",1]]},{"name":"default_headers","params_p":{},"q_name":"default_headers","ret_type_p":[["CaseInsensitiveDict[str]",1]]}]}},{"file_path":"_internal_utils.py","response":{"classes":[],"funcs":[{"name":"to_native_string","params_p":{"encoding":[["str",1]],"string":[["str | bytes | str",1]]},"q_name":"to_native_string","ret_type_p":[["str",1]]},{"name":"unicode_is_ascii","params_p":{"u_string":[["str",1]]},"q_name":"unicode_is_ascii","ret_type_p":[["bool",1]]}]}},{"file_path":"exceptions.py","response":{"classes":[{"funcs":[{"name":"__init__","params_p":{"args":[["Any",1]],"kwargs":[["Any",1]]},"q_name":"RequestException.__init__","ret_type_p":[["None",1]]}],"name":"RequestException","q_name":"RequestException"},{"funcs":[{"name":"__init__","params_p":{"args":[["Any",1]],"kwargs":[["Any",1]]},"q_name":"JSONDecodeError.__init__","ret_type_p":[["None",1]]}],"name":"JSONDecodeError","q_name":"JSONDecodeError"}],"funcs":[]}},{"file_path":".py","response":{"classes":[],"funcs":[{"name":"check_compatibility","params_p":{"chardet_version":[["str | None",1]],"charset_normalizer_version":[["str | None",1]],"urllib3_version":[["str",1]]},"q_name":"check_compatibility","ret_type_p":[["None",1]]},{"name":"_check_cryptography","params_p":{"cryptography_version":[["str",1]]},"q_name":"_check_cryptography","ret_type_p":[["None",1]]}]}},{"file_path":"api.py","response":{"classes":[],"funcs":[{"name":"request","params_p":{"kwargs":[["Any",1]],"method":[["str | bytes",1]],"url":[["str | bytes",1]]},"q_name":"request","ret_type_p":[["Response",1]]},{"name":"delete","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"delete","ret_type_p":[["Response",1]]},{"name":"patch","params_p":{"data":[["_Data | None",1]],"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"patch","ret_type_p":[["Response",1]]},{"name":"put","params_p":{"data":[["_Data | None",1]],"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"put","ret_type_p":[["Response",1]]},{"name":"post","params_p":{"data":[["_Data | None",1]],"json":[["Incomplete | None",1]],"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"post","ret_type_p":[["Response",1]]},{"name":"head","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"head","ret_type_p":[["Response",1]]},{"name":"options","params_p":{"kwargs":[["Any",1]],"url":[["str | bytes",1]]},"q_name":"options","ret_type_p":[["Response",1]]},{"name":"get","params_p":{"kwargs":[["Any",1]],"params":[["_Params | None",1]],"url":[["str | bytes",1]]},"q_name":"get","ret_type_p":[["Response",1]]}]}}],"time_taken":"519.71 seconds"}
    """
    # json_response = response.json()
    json_response = json.loads(response)

    if json_response["error"] is not None:
        raise TypeT5Exception(json_response["error"])

    type_predictions_per_file = {}
    for file_response in json_response["responses"]:
        functions_predictions = []
        for class_obj in file_response["response"]["classes"]:
            functions_predictions += class_obj["funcs"]

        functions_predictions += file_response["response"]["funcs"]

        filter_fields = ["q_name", "params_p", "ret_type_p"]
        type_predictions = list(
            map(
                lambda f: {key: f[key] for key in f if key in filter_fields},
                functions_predictions,
            )
        )
        type_predictions_per_file[file_response["file_path"]] = type_predictions
    return type_predictions_per_file
